{"version":3,"sources":["app/js/components/Animate.js","app/js/components/App.js","app/js/components/Cube.js","app/js/components/Material.js","app/js/components/PercentSlider.js","app/js/components/Polyhedron.js","app/js/components/RowOfSolidsScene.js","app/js/components/Solid.js","app/js/components/Sparkle.js","app/js/components/Sphere.js","app/js/components/Spinning.js","app/js/components/SpinningCube.js","app/js/components/Title.js","app/main.js"],"names":["unboundAnimationCallback","animationCallback","_animationCallback","setState","elapsed","Date","now","_start","window","requestAnimationFrame","Animate","props","context","start","bind","state","mapTime","render","otherProps","propTypes","startTime","number","func","isRequired","defaultProps","style","display","alignItems","justifyContent","flexDirection","position","top","right","bottom","left","App","onLightnessChange","lightness","onSaturationChange","saturation","onStepsChange","steps","hueScalar","hsluvColors","hslColors","i","hue","Math","floor","push","boxGeometry","THREE","BoxGeometry","Cube","color","Material","PercentSlider","label","value","onChange","string","flexGrow","cameraPosition","Vector3","cameraLookAt","baseCameraProps","fov","near","far","lookAt","RowOfSolidsScene","width","containerWidth","height","containerHeight","colors","delta","length","barWidth","spacing","lights","numLights","lightSpacing","lightOffset","lightIntensity","map","lightPosition","arrayOf","containerStyle","elementResize","Solid","Sparkle","maxRadius","minRadius","shapes","radius","random","size","tan","xRot","PI","yRot","zRot","rotation","Euler","applyEuler","scaleScalar","scale","renderGroup","shape","sphereGeometry","SphereGeometry","Sphere","cubeProps","Object","assign","geometry","material","iTimeScalar","Spinning","mapTimeToRotation","time","t","scaledTime","xRotScalar","yRotScalar","zRotScalar","sin","renderCube","children","SpinningCube","textAlign","fontSize","fontFamily","fontWeight","marginTop","Title","document","addEventListener","app"],"mappings":"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","file":"public/app.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction unboundAnimationCallback() {\n  const animationCallback = this._animationCallback;\n  // If there is no animation callback, the component has been unmounted\n  if (!animationCallback) {\n    return;\n  }\n\n  this.setState(() => ({ elapsed: Date.now() - this._start }));\n  window.requestAnimationFrame(animationCallback);\n};\n\nclass Animate extends Component {\n\n  //\n  // Lifecycle\n\n  constructor(props, context) {\n    super(props, context);\n\n    this._start = props.start != null ? props.start : Date.now();\n    this._animationCallback = unboundAnimationCallback.bind(this);\n\n    this.state = {\n      elapsed: 0,\n    };\n  }\n\n  componentDidMount() {\n    window.requestAnimationFrame(this._animationCallback);\n  }\n\n  componentWillUnmount() {\n    this._animationCallback = null;\n  }\n\n  //\n  // Render\n\n  render() {\n    const {\n      start,\n      mapTime,\n      render,\n      ...otherProps\n    } = this.props;\n\n    return render(mapTime(this.state.elapsed), otherProps);\n  }\n}\n\nAnimate.propTypes = {\n  startTime: PropTypes.number,\n  mapTime: PropTypes.func.isRequired,\n  render: PropTypes.func.isRequired\n}\n\nAnimate.defaultProps = {\n  mapTime: () => {}\n};\n\nexport default Animate;\n","import React, { Component } from 'react';\nimport { hsluvToHex } from 'hsluv';\nimport hslToHex from 'hsl-to-hex';\nimport { GUI, Number } from 'dis-gui';\nimport RowOfSolidsScene from './RowOfSolidsScene';\nimport Title from './Title';\nimport PercentSlider from './PercentSlider';\n\nconst style = {\n  display: 'flex',\n  alignItems: 'stretch',\n  justifyContent: 'stretch',\n  flexDirection: 'column',\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0\n};\n\nclass App extends Component {\n\n  //\n  // Lifecycle\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      saturation: 90,\n      lightness: 60,\n      steps: 12\n    };\n  }\n\n  //\n  // Listeners\n\n  onLightnessChange = (lightness) => {\n    this.setState(() => ({ lightness }));\n  };\n\n  onSaturationChange = (saturation) => {\n    this.setState(() => ({ saturation }));\n  };\n\n  onStepsChange = (steps) => {\n    this.setState(() => ({ steps }));\n  };\n\n  //\n  // Render\n\n  render() {\n    const {\n      saturation,\n      lightness,\n      steps\n    } = this.state;\n\n    //\n    // Set up colors\n\n    const hueScalar = 360 / steps;\n    const hsluvColors = [];\n    const hslColors = [];\n    for (let i = 0; i < steps; i++) {\n      const hue = Math.floor(i * hueScalar);\n      hsluvColors.push(hsluvToHex([hue, saturation, lightness]));\n      hslColors.push(hslToHex(hue, saturation, lightness));\n    }\n\n    return (\n      <div style={style}>\n        <Title>HSLuv</Title>\n        <RowOfSolidsScene colors={hsluvColors} />\n\n        <Title>HSL</Title>\n        <RowOfSolidsScene colors={hslColors} />\n\n        <GUI>\n          <PercentSlider\n            label=\"Saturation\"\n            value={saturation}\n            onChange={this.onSaturationChange}\n          />\n          <PercentSlider\n            label=\"Ligthness\"\n            value={lightness}\n            onChange={this.onLightnessChange}\n          />\n          <PercentSlider\n            label=\"Steps\"\n            value={steps}\n            onChange={this.onStepsChange}\n          />\n        </GUI>\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport React3 from 'react-three-renderer';\nimport Material from './Material';\n\nconst boxGeometry = new THREE.BoxGeometry(5, 5, 5);\n\nclass Cube extends Component {\n\n  //\n  // Render\n\n  render() {\n    const {\n      color,\n      ...otherProps\n    } = this.props;\n\n    return (\n      <mesh {...otherProps}>\n        <Material color={color} />\n        <boxGeometry width={5} height={5} depth={5} />\n      </mesh>\n    );\n  }\n}\n\nexport default Cube;\n","import React, { Component } from 'react';\n\nclass Material extends Component {\n\n  //\n  // Render\n\n  render() {\n    const {\n      color\n    } = this.props;\n\n    return (\n      <meshPhongMaterial\n        color={color}\n      />\n    )\n  }\n\n}\n\nexport default Material;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Number } from 'dis-gui';\n\nclass PercentSlider extends Component {\n\n  //\n  // Render\n\n  render() {\n    const {\n      label,\n      value,\n      onChange\n    } = this.props;\n\n    return (\n      <Number\n        label={label}\n        min={1}\n        max={100}\n        step={1}\n        value={value}\n        onChange={onChange}\n      />\n    );\n  }\n\n}\n\nPercentSlider.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default PercentSlider;\n","// import React, { Component } from 'react';\n\n// function generateMaterial(color) {\n//   return new THREE.MeshPhongMaterial({ color });\n// }\n\n// class Polyhedron extends Component {\n\n//   //\n//   // Render\n\n//   render() {\n//     return (\n//       <>\n//     );\n//   }\n\n// }\n\n// export default Polyhedron;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport React3 from 'react-three-renderer';\nimport Dimensions from 'react-dimensions';\n// import SpinningCube from './SpinningCube';\nimport Sparkle from './Sparkle';\nimport Sphere from './Sphere';\nimport SpinningCube from './SpinningCube';\n\nconst style = {\n  display: 'flex',\n  alignItems: 'stretch',\n  justifyContent: 'stretch',\n  flexGrow: 1\n};\n\nconst cameraPosition = new THREE.Vector3(0, 20, 120);\nconst cameraLookAt = new THREE.Vector3(0, 0, 0);\n\nconst baseCameraProps = {\n  fov: 25,\n  near: 1,\n  far: 2000,\n  position: cameraPosition,\n  lookAt: cameraLookAt\n};\n\nclass RowOfSolidsScene extends Component {\n\n  //\n  // Render\n\n  render() {\n    const {\n      containerWidth: width,\n      containerHeight: height,\n      colors\n    } = this.props;\n\n    if (!width || !height) {\n      return null;\n    }\n\n    const delta = (colors.length - 1) / 2;\n    const barWidth = 150;\n    const spacing = barWidth / colors.length;\n\n    const lights = [\n      new THREE.Vector3(0, -150, -150)\n    ];\n\n    const numLights = 1;\n    const lightSpacing = barWidth / numLights;\n    const lightOffset = barWidth / -2;\n    const lightIntensity = 1 / numLights;\n    for (let i = 0; i < numLights; i++) {\n      lights.push(new THREE.Vector3((i + 0.5) * lightSpacing + lightOffset, 50, 150));\n    }\n\n    return (\n      <div style={style}>\n\n        <React3\n          width={width}\n          height={height}\n          mainCamera=\"mainCamera\"\n          alpha={true}\n        >\n\n          <scene>\n\n            <perspectiveCamera\n              name=\"mainCamera\"\n              aspect={width / height}\n              {...baseCameraProps}\n            />\n\n            {\n              lights.map((lightPosition, i) => (\n                <pointLight\n                  key={`light:${i}`}\n                  color={0xffffff}\n                  position={lightPosition}\n                  intensity={lightIntensity}\n                />\n              ))\n            }\n\n            {\n              colors.map((color, i) => (\n                <Sparkle\n                  key={`cube:${i}`}\n                  color={color}\n                  position={new THREE.Vector3((i - delta) * spacing, 0, 0)}\n                  i={i}\n                />\n              ))\n            }\n\n          </scene>\n\n        </React3>\n\n      </div>\n    );\n  }\n}\n\nRowOfSolidsScene.propTypes = {\n  containerWidth: PropTypes.number.isRequired,\n  containerHeight: PropTypes.number.isRequired,\n  colors: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired\n};\n\nexport default Dimensions({\n  containerStyle: {\n    display: 'flex',\n    flexGrow: 1\n  },\n  elementResize: true\n})(RowOfSolidsScene);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport React3 from 'react-three-renderer';\n\nclass Solid extends Component {\n\n}\n\nSolid.propTypes = {\n  color: PropTypes.string.isRequired\n};\n\nexport default Solid;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Cube from './Cube';\nimport Sphere from './Sphere';\nimport Spinning from './Spinning';\n\nclass Sparkle extends Component {\n\n  //\n  // Lifecycle\n\n  constructor(props, context) {\n    super(props, context);\n\n    const maxRadius = 10;\n    const minRadius = 5;\n\n    const shapes = [];\n    for (let i = 0; i < 15; i++) {\n      const radius = Math.random() * (maxRadius - minRadius) + minRadius;\n      const size = 1 - Math.tan(radius) / 1.5;\n      const xRot = Math.random() * Math.PI * 2;\n      const yRot = Math.random() * Math.PI * 2;\n      const zRot = Math.random() * Math.PI * 2;\n      const position = new THREE.Vector3(radius, 0, 0);\n      const rotation = new THREE.Euler(\n        xRot,\n        yRot, zRot\n      );\n\n      position.applyEuler(rotation);\n      const scaleScalar = 1 - Math.tan(radius / maxRadius) / 1.5;\n      const scale = new THREE.Vector3(scaleScalar, scaleScalar, scaleScalar);\n\n      shapes.push({\n        position,\n        rotation,\n        scale\n      });\n    }\n\n    this.shapes = shapes;\n  }\n\n  //\n  // Render\n\n  renderGroup = (rotation) => {\n    const {\n      color,\n      position\n    } = this.props;\n\n    const shapes = this.shapes;\n\n    return (\n      <group\n        position={position}\n        rotation={rotation}\n      >\n\n        {\n          shapes.map((shape, i) => (\n            <Cube\n              key={i}\n              position={shape.position}\n              rotation={shape.rotation}\n              scale={shape.scale}\n              color={color}\n            />\n          ))\n        }\n\n      </group>\n    );\n  };\n\n  render() {\n    const {\n      i\n    } = this.props;\n\n    return (\n      <Spinning i={i}>\n        {this.renderGroup}\n      </Spinning>\n    );\n  }\n\n}\n\nexport default Sparkle;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport React3 from 'react-three-renderer';\nimport Solid from './Solid';\n\nconst sphereGeometry = new THREE.SphereGeometry(10, 8, 8);\n\nclass Sphere extends Solid {\n\n  //\n  // Render\n\n  render() {\n    const cubeProps = Object.assign({}, {\n      geometry: sphereGeometry,\n      material: this.material,\n      scale: new THREE.Vector3(1, 1, 1)\n    }, this.props);\n\n    return (\n      <mesh {...cubeProps} />\n    );\n  }\n}\n\nexport default Sphere;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport React3 from 'react-three-renderer';\nimport Animate from './Animate';\n\nconst iTimeScalar = 100;\n\nclass Spinning extends Component {\n\n  //\n  // Control\n\n  mapTimeToRotation = (time) => {\n    const t = this.props;\n    const { i } = this.props;\n    const scaledTime = time + i * iTimeScalar;\n\n    const xRotScalar = 1 / 12000;\n    const yRotScalar = 1 / 29000;\n    const zRotScalar = 1 / 45000;\n\n    return new THREE.Euler(\n      Math.sin(scaledTime * xRotScalar) * 2 * Math.PI,\n      Math.sin(scaledTime * yRotScalar) * 2 * Math.PI,\n      Math.sin(scaledTime * zRotScalar) * 2 * Math.PI\n    );\n  };\n\n  //\n  // Render\n\n  renderCube = (rotation) => {\n    return this.props.children(rotation);\n  };\n\n  render() {\n    return (\n      <Animate\n        start={0}\n        mapTime={this.mapTimeToRotation}\n        render={this.renderCube}\n      />\n    );\n  }\n\n}\n\nSpinning.propTypes = {\n  children: PropTypes.func.isRequired,\n  i: PropTypes.number.isRequired\n};\n\nexport default Spinning;\n","import React, { Component } from 'react';\nimport Cube from './Cube';\nimport Spinning from './Spinning';\n\nclass SpinningCube extends Component {\n\n  //\n  // Render\n\n  renderCube = (rotation) => {\n    const {\n      color,\n      position\n    } = this.props;\n\n    return (\n      <Cube\n        color={color}\n        position={position}\n        rotation={rotation}\n      />\n    );\n  };\n\n  render() {\n    const {\n      i\n    } = this.props;\n\n    return (\n      <Spinning i={i}>\n        {this.renderCube}\n      </Spinning>\n    );\n  }\n}\n\nexport default SpinningCube;\n","import React, { Component } from 'react';\n\nconst style = {\n  textAlign: 'center',\n  fontSize: '32px',\n  fontFamily: 'sans-serif',\n  fontWeight: 'strong',\n  marginTop: '4px'\n};\n\nclass Title extends Component {\n\n  //\n  // Render\n\n  render() {\n    return (\n      <div style={style}>{this.props.children}</div>\n    );\n  }\n\n}\n\nexport default Title;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from './js/components/App';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(<App color=\"#00ff00\" />, window.app);\n});\n"]}