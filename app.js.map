{"version":3,"sources":["app/js/components/Animate.js","app/js/components/App.js","app/js/components/Cube.js","app/js/components/CubeSceneRow.js","app/js/components/PercentSlider.js","app/js/components/Sparkle.js","app/js/components/SpinningCamera.js","app/js/components/SpinningCube.js","app/js/components/SpinningCubeScene.js","app/js/components/Title.js","app/main.js"],"names":["unboundAnimationCallback","elapsed","Date","now","_start","setState","_animationCallback","window","requestAnimationFrame","Animate","props","context","start","bind","state","animationCallback","mapTime","render","otherProps","propTypes","startTime","number","func","isRequired","defaultProps","style","display","alignItems","justifyContent","flexDirection","position","top","right","bottom","left","App","onLightnessChange","lightness","onSaturationChange","saturation","onStepsChange","steps","hueScalar","hsluvColors","hslColors","i","hue","Math","floor","push","generateMaterial","color","THREE","MeshPhongMaterial","boxGeometry","BoxGeometry","Cube","material","nextProps","setMaterial","cubeProps","Object","assign","geometry","scale","Vector3","string","flexGrow","cameraPosition","cameraLookAt","baseCameraProps","fov","near","far","lookAt","CubeSceneRow","width","containerWidth","height","containerHeight","colors","delta","length","barWidth","spacing","lights","numLights","lightSpacing","lightOffset","lightIntensity","console","log","map","lightPosition","arrayOf","containerStyle","elementResize","PercentSlider","label","value","onChange","Sparkle","lookat","circleScalar","cameraDistance","mapTimeToPosition","time","y","sin","x","cos","z","SpinningCamera","renderCamera","name","aspect","apsect","SpinningCube","mapTimeToRotation","t","iTimeScalar","scaledTime","xRotScalar","yRotScalar","zRotScalar","xRot","PI","yRot","zRot","Euler","renderCube","rotation","instanceOf","textAlign","fontSize","fontFamily","fontWeight","marginTop","Title","children","document","addEventListener","app"],"mappings":"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","file":"public/app.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction unboundAnimationCallback() {\n  const elapsed = Date.now() - this._start;\n\n  this.setState(() => ({ elapsed }));\n\n  if (this._animationCallback) {\n    window.requestAnimationFrame(this._animationCallback);\n  }\n};\n\nclass Animate extends Component {\n\n  //\n  // Lifecycle\n\n  constructor(props, context) {\n    super(props, context);\n\n    this._start = props.start != null ? props.start : Date.now();\n    this._animationCallback = unboundAnimationCallback.bind(this);\n\n    this.state = {\n      elapsed: 0,\n    };\n  }\n\n  componentWillMount() {\n    window.requestAnimationFrame(this._animationCallback);\n  }\n\n  componentWillUnmount() {\n    this.animationCallback = null;\n  }\n\n  //\n  // Render\n\n  render() {\n    const {\n      start,\n      mapTime,\n      render,\n      ...otherProps\n    } = this.props;\n\n    return render(mapTime(this.state.elapsed), otherProps);\n  }\n}\n\nAnimate.propTypes = {\n  startTime: PropTypes.number,\n  mapTime: PropTypes.func.isRequired,\n  render: PropTypes.func.isRequired\n}\n\nAnimate.defaultProps = {\n  mapTime: () => {}\n};\n\nexport default Animate;\n","import React, { Component } from 'react';\nimport { hsluvToHex } from 'hsluv';\nimport hslToHex from 'hsl-to-hex';\nimport { GUI, Number } from 'dis-gui';\nimport CubeSceneRow from './CubeSceneRow';\nimport Title from './Title';\nimport PercentSlider from './PercentSlider';\n\nconst style = {\n  display: 'flex',\n  alignItems: 'stretch',\n  justifyContent: 'stretch',\n  flexDirection: 'column',\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0\n};\n\nclass App extends Component {\n\n  //\n  // Lifecycle\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      saturation: 90,\n      lightness: 60,\n      steps: 12\n    };\n  }\n\n  //\n  // Listeners\n\n  onLightnessChange = (lightness) => {\n    this.setState(() => ({ lightness }));\n  };\n\n  onSaturationChange = (saturation) => {\n    this.setState(() => ({ saturation }));\n  };\n\n  onStepsChange = (steps) => {\n    this.setState(() => ({ steps }));\n  };\n\n  //\n  // Render\n\n  render() {\n    const {\n      saturation,\n      lightness,\n      steps\n    } = this.state;\n\n    //\n    // Set up colors\n\n    const hueScalar = 360 / steps;\n    const hsluvColors = [];\n    const hslColors = [];\n    for (let i = 0; i < steps; i++) {\n      const hue = Math.floor(i * hueScalar);\n      hsluvColors.push(hsluvToHex([hue, saturation, lightness]));\n      hslColors.push(hslToHex(hue, saturation, lightness));\n    }\n\n    return (\n      <div style={style}>\n        <Title>HSLuv</Title>\n        <CubeSceneRow colors={hsluvColors} />\n\n        <Title>HSL</Title>\n        <CubeSceneRow colors={hslColors} />\n\n        <GUI>\n          <PercentSlider\n            label=\"Saturation\"\n            value={saturation}\n            onChange={this.onSaturationChange}\n          />\n          <PercentSlider\n            label=\"Ligthness\"\n            value={lightness}\n            onChange={this.onLightnessChange}\n          />\n          <PercentSlider\n            label=\"Steps\"\n            value={steps}\n            onChange={this.onStepsChange}\n          />\n        </GUI>\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport React3 from 'react-three-renderer';\n\nfunction generateMaterial(color) {\n  return new THREE.MeshPhongMaterial({ color });\n}\n\nconst boxGeometry = new THREE.BoxGeometry(10, 10, 10);\n\nclass Cube extends Component {\n\n  //\n  // Lifecycle\n\n  constructor(props, context) {\n    super(props, context);\n\n    const {\n      color\n    } = props;\n\n    this.material = generateMaterial(color);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.color !== this.props.color) {\n      this.setMaterial(nextProps.color);\n    }\n  }\n\n  //\n  // Control\n\n  setMaterial(color) {\n    this.material = generateMaterial(color);\n  }\n\n  //\n  // Render\n\n  render() {\n    const cubeProps = Object.assign({}, this.props, {\n      geometry: boxGeometry,\n      material: this.material,\n      scale: new THREE.Vector3(1, 1, 1)\n    });\n\n    return (\n      <mesh {...cubeProps} />\n    );\n  }\n}\n\nCube.propTypes = {\n  color: PropTypes.string.isRequired\n};\n\nexport default Cube;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport React3 from 'react-three-renderer';\nimport Dimensions from 'react-dimensions';\nimport SpinningCube from './SpinningCube';\n\nconst style = {\n  display: 'flex',\n  alignItems: 'stretch',\n  justifyContent: 'stretch',\n  flexGrow: 1\n};\n\nconst cameraPosition = new THREE.Vector3(0, 20, 120);\nconst cameraLookAt = new THREE.Vector3(0, 0, 0);\n\nconst baseCameraProps = {\n  fov: 25,\n  near: 1,\n  far: 2000,\n  position: cameraPosition,\n  lookAt: cameraLookAt\n};\n\nclass CubeSceneRow extends Component {\n\n  //\n  // Render\n\n  render() {\n    const {\n      containerWidth: width,\n      containerHeight: height,\n      colors\n    } = this.props;\n\n    if (!width || !height) {\n      return null;\n    }\n\n    const delta = (colors.length - 1) / 2;\n    const barWidth = 150;\n    const spacing = barWidth / colors.length;\n\n    const lights = [\n      new THREE.Vector3(0, -150, -150)\n    ];\n\n    const numLights = 1;\n    const lightSpacing = barWidth / numLights;\n    const lightOffset = barWidth / -2;\n    const lightIntensity = 1 / numLights;\n    for (let i = 0; i < numLights; i++) {\n      lights.push(new THREE.Vector3((i + 0.5) * lightSpacing + lightOffset, 50, 150));\n    }\n\n    console.log(lights);\n\n    return (\n      <div style={style}>\n\n        <React3\n          width={width}\n          height={height}\n          mainCamera=\"mainCamera\"\n          alpha={true}\n        >\n\n          <scene>\n\n            <perspectiveCamera\n              name=\"mainCamera\"\n              aspect={width / height}\n              {...baseCameraProps}\n            />\n\n            {\n              lights.map((lightPosition, i) => (\n                <pointLight\n                  key={`light:${i}`}\n                  color={0xffffff}\n                  position={lightPosition}\n                  intensity={lightIntensity}\n                />\n              ))\n            }\n\n            {\n              colors.map((color, i) => (\n                <SpinningCube\n                  key={`cube:${i}`}\n                  color={color}\n                  position={new THREE.Vector3((i - delta) * spacing, 0, 0)}\n                  i={i}\n                />\n              ))\n            }\n\n          </scene>\n\n        </React3>\n\n      </div>\n    );\n  }\n}\n\nCubeSceneRow.propTypes = {\n  containerWidth: PropTypes.number.isRequired,\n  containerHeight: PropTypes.number.isRequired,\n  colors: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired\n};\n\nexport default Dimensions({\n  containerStyle: {\n    display: 'flex',\n    flexGrow: 1\n  },\n  elementResize: true\n})(CubeSceneRow);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Number } from 'dis-gui';\n\nclass PercentSlider extends Component {\n\n  //\n  // Render\n\n  render() {\n    const {\n      label,\n      value,\n      onChange\n    } = this.props;\n\n    return (\n      <Number\n        label={label}\n        min={1}\n        max={100}\n        step={1}\n        value={value}\n        onChange={onChange}\n      />\n    );\n  }\n\n}\n\nPercentSlider.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default PercentSlider;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Sparkle extends Component {\n\n  //\n  // Render\n\n  render() {\n    return (\n      <Cube />\n    )\n  }\n\n}\n\nexport default Sparkle;\n\n\n// import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n// import React3 from 'react-three-renderer';\n// import materialCache from 'js/utils/materialCache';\n\n// function generateMaterial(color) {\n//   // return new THREE.MeshLambertMaterial({ color });\n//   return new THREE.MeshPhongMaterial({ color });\n//   // return new THREE.MeshStandardMaterial({ color });\n//   // return new THREE.MeshBasicMaterial({ color });\n//   // return new THREE.MeshNormalMaterial();\n// }\n\n// const boxGeometry = new THREE.BoxGeometry(5, 10, 10);\n// // const material = new THREE.MeshPhongMaterial({ color: '#ffff00' });\n// // const material = new THREE.MeshLambertMaterial({ color: '#ffff00' });\n// // const material = new THREE.MeshStandardMaterial({ color: '#ffff00' });\n// // const material = new THREE.MeshNormalMaterial({ color: '#fff' });\n// // const material = new THREE.MeshBasicMaterial({ color: '#fff' });\n// // MeshStandardMaterial\n\n// class Cube extends Component {\n\n//   //\n//   // Lifecycle\n\n//   constructor(props, context) {\n//     super(props, context);\n\n//     const {\n//       color\n//     } = props;\n\n//     this.state = {\n//       material: generateMaterial(color)\n//     };\n//   }\n\n//   componentWillReceiveProps(nextProps) {\n//     if (nextProps.color !== this.props.color) {\n//       this.setMaterial(nextProps.color);\n//     }\n//   }\n\n//   //\n//   // Control\n\n//   setMaterial(color) {\n//     // this.setState(() => ({ material: new THREE.MeshPhongMaterial({ color }) }));\n//     this.setState(() => ({ material: generateMaterial(color) }));\n//   }\n\n//   //\n//   // Render\n\n//   render() {\n//     const { material } = this.state;\n\n//     const {\n//       position,\n//       rotation,\n//       ...otherProps\n//     } = this.props;\n\n//     const { x, y, z } = position;\n\n//     const cubeProps = Object.assign({}, otherProps, {\n//       geometry: boxGeometry,\n//       material,\n//       scale: new THREE.Vector3(1, 1, 1)\n//     });\n\n//     return (\n//       <group\n//         rotation={rotation}\n//         position={position}\n//       >\n//         <mesh\n//           {...cubeProps}\n//           position={new THREE.Vector3(0, 0, 0)}\n//         />\n//         <mesh\n//           {...cubeProps}\n//           position={new THREE.Vector3(5, 5, 0)}\n//         />\n//       </group>\n//     );\n//   }\n// }\n\n// Cube.propTypes = {\n//   color: PropTypes.string.isRequired\n// };\n\n// export default Cube;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport React3 from 'react-three-renderer';\nimport Animate from './Animate';\n\nconst baseCameraProps = {\n  fov: 25,\n  near: 1,\n  far: 800,\n  lookat: new THREE.Vector3(0, 0, 0)\n};\n\nconst circleScalar = 1 / 2000;\nconst cameraDistance = 180;\n\nfunction mapTimeToPosition(time) {\n  const y = Math.sin(time * circleScalar) * cameraDistance;\n  const x = Math.cos(time * circleScalar) * cameraDistance;\n  const z = Math.sin(time / 3000) * 20 + 15;\n  return new THREE.Vector3(x, z, y);\n}\n\nclass SpinningCamera extends Component {\n\n  //\n  // Control\n\n  renderCamera = (position) => {\n    const {\n      name,\n      aspect\n    } = this.props;\n\n    return (\n      <perspectiveCamera\n        name={name}\n        position={position}\n        name={name}\n        aspect={aspect}\n        {...baseCameraProps}\n      />\n    );\n  };\n\n  //\n  // Render\n\n  render() {\n    const {\n      name,\n      apsect\n    } = this.props;\n\n    return (\n      <Animate\n        start={0}\n        mapTime={mapTimeToPosition}\n        render={this.renderCamera}\n      />\n    );\n  }\n\n}\n\nSpinningCamera.propTypes = {\n  aspect: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired\n}\n\nSpinningCamera.defaultProps = {\n  aspect: 1\n};\n\nexport default SpinningCamera;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport React3 from 'react-three-renderer';\nimport Animate from './Animate';\nimport Cube from './Cube';\n\nconst lightIntensity = 0.1;\n\nclass SpinningCube extends Component {\n\n  //\n  // Control\n\n  mapTimeToRotation = (time) => {\n    const t = this.props;\n    const { i } = this.props;\n    const iTimeScalar = 100;\n    const scaledTime = time + i * iTimeScalar;\n\n    const xRotScalar = 1 / 12000;\n    const yRotScalar = 1 / 29000;\n    const zRotScalar = 1 / 45000;\n\n    const xRot = Math.sin(scaledTime * xRotScalar) * 2 * Math.PI;\n    const yRot = Math.sin(scaledTime * yRotScalar) * 2 * Math.PI;\n    const zRot = Math.sin(scaledTime * zRotScalar) * 2 * Math.PI;\n\n    return new THREE.Euler(\n      xRot,\n      yRot,\n      zRot\n    );\n  };\n\n  //\n  // Render\n\n  renderCube = (rotation) => {\n    const {\n      color,\n      position,\n      i\n    } = this.props;\n\n    return (\n      <Cube\n        color={color}\n        position={position}\n        rotation={rotation}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <Animate\n        start={0}\n        mapTime={this.mapTimeToRotation}\n        render={this.renderCube}\n      />\n    );\n  }\n\n}\n\nSpinningCube.propTypes = {\n  color: PropTypes.string.isRequired,\n  i: PropTypes.number.isRequired,\n  position: PropTypes.instanceOf(THREE.Vector3).isRequired\n};\n\nexport default SpinningCube;\n","// import Cube from './Cube';\n// import Animate from './Animate';\n\n// function mapTimeToRotation(time) {\n//   return {\n\n//   }\n// }\n\n// function renderCube() {\n//   return <Cube />;\n// }\n\n// class SpinningCube extends Cube {\n\n//   //\n//   // Render\n\n//   render() {\n//     return (\n//       <Animate\n//         map={mapTimeToRotation}\n//         render={renderCube}\n//       />\n//     );\n//   }\n\n// }\n\n// export default SpinningCube;\n","import React, { Component } from 'react';\n\nconst style = {\n  textAlign: 'center',\n  fontSize: '32px',\n  fontFamily: 'sans-serif',\n  fontWeight: 'strong',\n  marginTop: '4px'\n};\n\nclass Title extends Component {\n\n  //\n  // Render\n\n  render() {\n    return (\n      <div style={style}>{this.props.children}</div>\n    );\n  }\n\n}\n\nexport default Title;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from './js/components/App';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(<App color=\"#00ff00\" />, window.app);\n});\n"]}